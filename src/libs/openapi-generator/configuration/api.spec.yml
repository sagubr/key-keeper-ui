openapi: 3.0.1
info:
    title: key-keeper
    version: "0.0"
servers:
    - url: http://localhost:8080/
security:
    - Authorization: []
tags:
    - name: Requesters
      description: Operações relacionadas a entidade solicitantes
    - name: Users
      description: Operações relacionadas a entidade Usuário
    - name: Reservation
      description: Operações relacionadas a entidade reservas
    - name: JobTitle
      description: Operações relacionadas a entidade cargo
    - name: Location
      description: Operações relacionadas a entidade Localização
    - name: Permissions
      description: Operações relacionadas a entidade Permissão
    - name: Facility
      description: Operações relacionadas a entidade lugar
    - name: LocationType
      description: Operações relacionadas a entidade Tipos de Localização
    - name: Key
      description: Operações relacionadas a entidade Chaves
paths:
    /api/facility:
        get:
            tags:
                - Facility
            summary: Obter todas as instalações
            operationId: findAllFacilities
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Facility"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/facility/save:
        post:
            tags:
                - Facility
            summary: Criar nova instalação
            operationId: addFacility
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Facility"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Facility"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/job-title:
        get:
            tags:
                - JobTitle
            summary: Obter todos os cargos
            operationId: findAllJobTitle
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/JobTitle"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/job-title/save:
        post:
            tags:
                - JobTitle
            summary: Criar novo cargo
            operationId: addJobTitle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/JobTitle"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/JobTitle"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/key:
        get:
            tags:
                - Key
            summary: Obter todas as chaves
            operationId: findAllKeys
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Key"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/key/location:
        post:
            tags:
                - Key
            summary: Obter chaves por localização
            operationId: findByLocation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Location"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Key"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/location:
        get:
            tags:
                - Location
            summary: Obter todas as localizações
            operationId: findAllLocations
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Location"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/location-type:
        get:
            tags:
                - LocationType
            summary: Obter todos os tipos de localização
            operationId: findAllLocationTypes
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LocationType"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/location/save:
        post:
            tags:
                - Location
            summary: Criar nova localização
            operationId: addLocation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Location"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Location"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/location/{id}:
        get:
            tags:
                - Location
            summary: Obter detalhes de uma localização por ID
            operationId: findByIdLocation
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Location"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/permissions:
        get:
            tags:
                - Permissions
            summary: Obter todas as permissões
            operationId: findAllPermissions
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Permission"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/permissions/save:
        post:
            tags:
                - Permissions
            summary: Criar nova instalação
            operationId: addFacility_1
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Permission"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Permission"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/requesters:
        get:
            tags:
                - Requesters
            summary: Obter todos os solicitantes
            operationId: findAllRequesters
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Requester"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/requesters/save:
        post:
            tags:
                - Requesters
            summary: Criar novo solicitante
            operationId: addRequester
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Requester"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Requester"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/reservations:
        get:
            tags:
                - Reservation
            summary: Obter todas as reservas
            operationId: getAllReservations
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Reservation"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/users:
        get:
            tags:
                - Users
            summary: Obter todos os usuários
            operationId: findAllUsers
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/User"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
    /api/users/save:
        post:
            tags:
                - Users
            summary: Criar novo usuário
            operationId: addUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserDto"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: {}
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: {}
components:
    schemas:
        EntityPattern:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    nullable: true
                version:
                    type: integer
                    format: int32
                active:
                    type: boolean
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        Facility:
            required:
                - name
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      name:
                          type: string
        JobTitle:
            required:
                - name
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      name:
                          type: string
        Key:
            required:
                - description
                - location
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      description:
                          type: string
                      location:
                          $ref: "#/components/schemas/Location"
        Location:
            required:
                - facility
                - locationType
                - name
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      name:
                          type: string
                      facility:
                          $ref: "#/components/schemas/Facility"
                      locationType:
                          $ref: "#/components/schemas/LocationType"
        LocationType:
            required:
                - name
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      name:
                          type: string
        Permission:
            required:
                - endDateTime
                - location
                - requester
                - startDateTime
                - user
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      location:
                          $ref: "#/components/schemas/Location"
                      requester:
                          $ref: "#/components/schemas/Requester"
                      user:
                          $ref: "#/components/schemas/User"
                      description:
                          type: string
                      startDateTime:
                          type: string
                          format: date-time
                      endDateTime:
                          type: string
                          format: date-time
        Requester:
            required:
                - email
                - name
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      name:
                          type: string
                      email:
                          type: string
                      register:
                          type: string
                      jobTitle:
                          nullable: true
                          allOf:
                              - $ref: "#/components/schemas/JobTitle"
        Reservation:
            required:
                - endDateTime
                - startDateTime
                - status
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      permission:
                          nullable: true
                          allOf:
                              - $ref: "#/components/schemas/Permission"
                      user:
                          nullable: true
                          allOf:
                              - $ref: "#/components/schemas/User"
                      notes:
                          type: string
                      startDateTime:
                          type: string
                          format: date-time
                      endDateTime:
                          type: string
                          format: date-time
                      status:
                          $ref: "#/components/schemas/Status"
        Roles:
            type: string
            enum:
                - VIEWER
                - EDITOR
                - MODERATOR
                - MANAGER
                - SUPER_ADMIN
        Status:
            type: string
            enum:
                - RESERVATION
                - AGENDADO
                - AND_PROGRESS
        User:
            required:
                - email
                - name
                - password
                - roles
                - username
            type: object
            allOf:
                - $ref: "#/components/schemas/EntityPattern"
                - properties:
                      name:
                          type: string
                      username:
                          type: string
                      email:
                          type: string
                      password:
                          type: string
                      roles:
                          $ref: "#/components/schemas/Roles"
        UserDto:
            required:
                - password
                - roles
                - username
            type: object
            properties:
                email:
                    type: string
                name:
                    type: string
                password:
                    type: string
                username:
                    type: string
                roles:
                    $ref: "#/components/schemas/Roles"
    securitySchemes:
        Authorization:
            type: http
            scheme: bearer
            bearerFormat: JWT
