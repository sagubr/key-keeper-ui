openapi: 3.0.1
info:
    title: key-keeper
    version: "0.0"
servers:
    -   url: http://localhost:8080/
security:
    -   Authorization: [ ]
tags:
    -   name: Requester
        description: Operações relacionadas a entidade solicitantes
    -   name: JobTitle
        description: Operações relacionadas a entidade cargo
    -   name: Location
        description: Operações relacionadas a entidade Localização
    -   name: Facility
        description: Operações relacionadas a entidade lugar
    -   name: Key
        description: Operações relacionadas a entidade Chaves
    -   name: Notifications
        description: Operações relacionadas a entidade Permissão
    -   name: Logging
        description: Operações relacionadas a entidade Permissão
    -   name: LocationType
        description: Operações relacionadas a entidade Tipos de Localização
    -   name: Permission
        description: Operações relacionadas a entidade Permissão
    -   name: Reservation
        description: Operações relacionadas a entidade reservas
    -   name: Users
        description: Operações relacionadas a entidade Usuário
paths:
    /api/facility:
        get:
            tags:
                - Facility
            summary: Obter todas as instalações
            operationId: findAllFacilities
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Facility"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/facility/save:
        post:
            tags:
                - Facility
            summary: Criar nova instalação
            operationId: addFacility
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Facility"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Facility"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/job-title:
        get:
            tags:
                - JobTitle
            summary: Obter todos os cargos
            operationId: findAllJobTitle
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/JobTitle"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/job-title/save:
        post:
            tags:
                - JobTitle
            summary: Criar novo cargo
            operationId: addJobTitle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/JobTitle"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/JobTitle"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/key:
        get:
            tags:
                - Key
            summary: Obter todas as chaves
            operationId: findAllKeys
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Key"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/key/location:
        post:
            tags:
                - Key
            summary: Obter chaves por localização
            operationId: findByLocation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Location"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Key"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/key/save:
        post:
            tags:
                - Key
            summary: Criar novo cargo
            operationId: addKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Key"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Key"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/key/update:
        post:
            tags:
                - Key
            summary: Atualizar cargo existente
            operationId: updateKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Key"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Key"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/location:
        get:
            tags:
                - Location
            summary: Obter todas as localizações
            operationId: findAllLocations
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Location"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/location-type:
        get:
            tags:
                - LocationType
            summary: Obter todos os tipos de localização
            operationId: findAllLocationTypes
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LocationType"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/location/save:
        post:
            tags:
                - Location
            summary: Criar nova localização
            operationId: addLocation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Location"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Location"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/location/{id}:
        get:
            tags:
                - Location
            summary: Obter detalhes de uma localização por ID
            operationId: findByIdLocation
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Location"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/permissions:
        get:
            tags:
                - Permission
            summary: Obter todas as permissões
            operationId: findAllPermissions
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Permission"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/permissions/requester:
        post:
            tags:
                - Permission
            summary: Obter todas as permissões por solicitante
            operationId: findByRequester
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Requester"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Permission"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/permissions/save:
        post:
            tags:
                - Permission
            summary: Criar nova instalação
            operationId: addPermission
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Permission"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Permission"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/requesters:
        get:
            tags:
                - Requester
            summary: Obter todos os solicitantes
            operationId: findAllRequesters
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Requester"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/requesters/save:
        post:
            tags:
                - Requester
            summary: Criar novo solicitante
            operationId: addRequester
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Requester"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Requester"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/reservations:
        get:
            tags:
                - Reservation
            summary: Obter todas as reservas
            operationId: findAllReservation
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Reservation"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/reservations/active:
        post:
            tags:
                - Reservation
            summary: Obter todas as reservas
            operationId: updateActiveReservation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Reservation"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/reservations/change-status:
        post:
            tags:
                - Reservation
            summary: Obter todas as reservas
            operationId: changeStatusReservation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Reservation"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/reservations/save:
        post:
            tags:
                - Reservation
            summary: Obter todas as reservas
            operationId: addReservation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Reservation"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Reservation"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/reservations/status:
        get:
            tags:
                - Reservation
            summary: Obter todas as reservas
            operationId: findAllByStatusReservation
            parameters:
                -   name: status
                    in: query
                    required: true
                    schema:
                        $ref: "#/components/schemas/Status"
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Reservation"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/users:
        get:
            tags:
                - Users
            summary: Obter todos os usuários
            operationId: findAllUsers
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/User"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /api/users/save:
        post:
            tags:
                - Users
            summary: Criar novo usuário
            operationId: addUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserDto"
                required: true
            responses:
                "200":
                    description: Operação bem sucedida
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "401":
                    description: Falha de autenticação
                "403":
                    description: Acesso não autorizado
                "404":
                    description: Recurso não encontrado
                "422":
                    description: Erro de validação
                    content:
                        application/json:
                            schema: { }
                "500":
                    description: Erro
                    content:
                        application/json:
                            schema: { }
    /logging/get:
        get:
            tags:
                - Logging
            operationId: streamLogging
            responses:
                "200":
                    description: streamLogging 200 response
                    content:
                        text/event-stream:
                            schema:
                                $ref: "#/components/schemas/Event_LoggingEvent_"
    /mail/send:
        post:
            operationId: send
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                to:
                                    type: string
                required: true
            responses:
                "200":
                    description: send 200 response
                    content:
                        application/json:
                            schema:
                                type: object
    /notifications/pop-up:
        get:
            tags:
                - Notifications
            operationId: streamNotifications
            responses:
                "200":
                    description: streamNotifications 200 response
                    content:
                        text/event-stream:
                            schema:
                                $ref: "#/components/schemas/Event_NotifierEvent_"
components:
    schemas:
        Assignment:
            required:
                - name
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        name:
                            type: string
                        roles:
                            type: array
                            items:
                                $ref: "#/components/schemas/Roles"
        EntityPattern:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    nullable: true
                version:
                    type: integer
                    format: int32
                active:
                    type: boolean
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        Event_LoggingEvent_:
            type: object
            properties:
                data:
                    $ref: "#/components/schemas/LoggingEvent"
                id:
                    type: string
                name:
                    type: string
                comment:
                    type: string
                retry:
                    type: string
        Event_NotifierEvent_:
            type: object
            properties:
                data:
                    $ref: "#/components/schemas/NotifierEvent"
                id:
                    type: string
                name:
                    type: string
                comment:
                    type: string
                retry:
                    type: string
        Facility:
            required:
                - name
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        name:
                            type: string
                        description:
                            type: string
        JobTitle:
            required:
                - name
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        name:
                            type: string
                        description:
                            type: string
        Key:
            required:
                - code
                - description
                - keyType
                - location
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        code:
                            type: integer
                            format: int64
                        description:
                            type: string
                        location:
                            $ref: "#/components/schemas/Location"
                        keyType:
                            $ref: "#/components/schemas/KeyType"
        KeyType:
            type: string
            enum:
                - PRINCIPAL
                - SECUNDARIA
        Location:
            required:
                - facility
                - locationType
                - name
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        name:
                            type: string
                        description:
                            type: string
                        facility:
                            $ref: "#/components/schemas/Facility"
                        locationType:
                            $ref: "#/components/schemas/LocationType"
                        maxCapacity:
                            type: integer
                            format: int32
                        restricted:
                            type: boolean
                        openingTime:
                            type: string
                            format: partial-time
                        closingTime:
                            type: string
                            format: partial-time
                        responsibles:
                            type: array
                            items:
                                $ref: "#/components/schemas/Requester"
        LocationType:
            required:
                - name
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        name:
                            type: string
                        description:
                            type: string
        LoggingEvent:
            required:
                - level
                - message
            type: object
            properties:
                level:
                    type: string
                message:
                    type: string
        NotifierEvent:
            required:
                - message
                - recipient
            type: object
            properties:
                recipient:
                    type: string
                message:
                    type: string
        Permission:
            required:
                - endDateTime
                - location
                - requester
                - startDateTime
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        location:
                            $ref: "#/components/schemas/Location"
                        requester:
                            $ref: "#/components/schemas/Requester"
                        user:
                            nullable: true
                            allOf:
                                -   $ref: "#/components/schemas/User"
                        description:
                            type: string
                        startDateTime:
                            type: string
                            format: date-time
                        endDateTime:
                            type: string
                            format: date-time
        Requester:
            required:
                - emails
                - name
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        name:
                            type: string
                        emails:
                            type: array
                            items:
                                $ref: "#/components/schemas/RequesterEmail"
                        register:
                            type: string
                        jobTitle:
                            nullable: true
                            allOf:
                                -   $ref: "#/components/schemas/JobTitle"
                        responsible:
                            type: boolean
        RequesterEmail:
            required:
                - emails
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        emails:
                            type: string
                        requester:
                            nullable: true
                            allOf:
                                -   $ref: "#/components/schemas/Requester"
        Reservation:
            required:
                - endDateTime
                - startDateTime
                - status
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        permission:
                            nullable: true
                            allOf:
                                -   $ref: "#/components/schemas/Permission"
                        user:
                            nullable: true
                            allOf:
                                -   $ref: "#/components/schemas/User"
                        notes:
                            type: string
                        startDateTime:
                            type: string
                            format: date-time
                        endDateTime:
                            type: string
                            format: date-time
                        status:
                            $ref: "#/components/schemas/Status"
        Roles:
            type: string
            enum:
                - EMPRESTIMOS
                - HISTORICO
                - SOLICITANTES
                - PERMISSOES
                - SALAS
                - TIPO_AMBIENTE
                - INSTALACOES
                - CARGOS
                - CONFIGURACAO
                - USUARIOS
                - ATRIBUICOES
        Status:
            type: string
            enum:
                - LOAN
                - SCHEDULED
                - COMPLETED
        User:
            required:
                - email
                - firstAccess
                - name
                - password
                - username
            type: object
            allOf:
                -   $ref: "#/components/schemas/EntityPattern"
                -   properties:
                        name:
                            type: string
                        username:
                            type: string
                        email:
                            type: string
                        password:
                            type: string
                        firstAccess:
                            type: boolean
                        assignments:
                            type: array
                            items:
                                $ref: "#/components/schemas/Assignment"
        UserDto:
            required:
                - assignment
                - password
                - username
            type: object
            properties:
                email:
                    type: string
                name:
                    type: string
                password:
                    type: string
                username:
                    type: string
                assignment:
                    $ref: "#/components/schemas/Assignment"
    securitySchemes:
        Authorization:
            type: http
            scheme: bearer
            bearerFormat: JWT
